<Project Sdk="Microsoft.NET.Sdk">
    <PropertyGroup>
        <OutputType>WinExe</OutputType>
        <ApplicationManifest>app.manifest</ApplicationManifest>
        <UseWindowsForms>false</UseWindowsForms>
        <UseWpf>false</UseWpf>

        <!-- trim runtimes -->
        <RuntimeIdentifier>win-x64</RuntimeIdentifier>
        <ValidateExecutableReferencesMatchSelfContained>false</ValidateExecutableReferencesMatchSelfContained>
        <!-- slimmer builds -->
        <SatelliteResourceLanguages>en</SatelliteResourceLanguages>
        <AllowUnsafeBlocks>True</AllowUnsafeBlocks>

        <Title>LazyDoctor</Title>
        <Authors>Govorunb</Authors>
        <Product>$(Title)</Product>
        <Version>0.2.0</Version>

        <Company>$(Authors)</Company>
        <AssemblyName>$(Title)</AssemblyName>

        <!--
            counterintuitively, trimming adds ~20MB to the assembly size
            it turns out something references Windows.Input.ICommand, which through a series of managers and type converters pulls in the entire kingdom of windows assemblies
            (a huge chunk of System.Windows.Forms, WPF, printing for some reason, etc)
        -->
        <!-- <PublishTrimmed>true</PublishTrimmed> -->
        <!-- aot adds another +25% over PublishTrimmed - it's moved to a conditional PropertyGroup below -->
        <!-- <PublishAot>true</PublishAot> -->

        <!-- WinRT OCR is used over OpenCvSharp for simplicity but it might be needed in the future -->
        <UseOpenCv>false</UseOpenCv>
    </PropertyGroup>

    <!--
        PublishAot is not set directly from command line because of a pretty weird msbuild quirk:
        build fails with NETSDK1207 because the analyzer project targets netstandard2.0 and thus can't be trimmed
        the flags provided from cli seem to get set in some global namespace that affects all projects
    -->
    <PropertyGroup Condition="'$(aot)' == 'true'">
        <PublishAot>true</PublishAot>
        <!-- for debugging assembly size with https://github.com/MichalStrehovsky/sizoscope -->
        <!-- <IlcGenerateMstatFile>true</IlcGenerateMstatFile> -->
        <!-- <IlcGenerateDgmlFile>true</IlcGenerateDgmlFile> -->
    </PropertyGroup>

    <PropertyGroup Condition="'$(Configuration)' == 'Release'">
        <DebugSymbols>false</DebugSymbols>
        <DebugType>None</DebugType>
    </PropertyGroup>

    <PropertyGroup Condition="'$(UseOpenCv)' == 'true'">
        <DefineConstants>$(DefineConstants);USE_OPENCV</DefineConstants>
<!--        <DefineConstants>$(DefineConstants);DEBUG_OPENCV</DefineConstants>-->
    </PropertyGroup>

    <ItemGroup>
        <AvaloniaResource Include="Assets\**" />
        <AvaloniaResource Remove="Assets\tessdata\*" />

        <Compile Remove="**\*OpenCv*.cs" Condition="$(UseOpenCv) == 'false'" />
        <!-- no idea why but this puts everything under Assets\tessdata instead of data\tessdata -->
        <!-- <Content Include="Assets\tessdata\*.*" LinkBase="data/tessdata" CopyToOutputDirectory="PreserveNewest" />-->
        <Content Include="Assets\tessdata\en.traineddata" Condition="$(UseOpenCv)" TargetPath="data/tessdata/en.traineddata" CopyToOutputDirectory="PreserveNewest" />
    </ItemGroup>

    <ItemGroup>
        <!-- https://github.com/dotnet/sdk/issues/45253 forces publishing with `dotnet publish` -->
        <ProjectReference Include="..\LazyDoctor.Analyzers\LazyDoctor.Analyzers.csproj"
                          OutputItemType="Analyzer" ReferenceOutputAssembly="false" />

        <PackageReference Include="HotAvalonia" PrivateAssets="all" />
        <PackageReference Include="Avalonia" />
        <PackageReference Include="Avalonia.Win32" />
        <PackageReference Include="Avalonia.Skia" />
<!--        <PackageReference Include="Avalonia.Desktop" />--> <!-- includes X11/Metal, no point -->
        <PackageReference Include="Avalonia.Themes.Fluent" />
        <PackageReference Include="Avalonia.ReactiveUI" />
        <PackageReference Include="FluentAvaloniaUI" />
        <PackageReference Include="JetBrains.Annotations" />
        <PackageReference Include="OpenCvSharp4.Windows" Condition="$(UseOpenCv)" />
        <PackageReference Include="ReactiveMarbles.CacheDatabase.Sqlite3" />
        <PackageReference Include="ReactiveUI" />
        <PackageReference Include="ReactiveUI.Fody" />
        <PackageReference Include="ReactiveUI.Validation" />
        <!-- <PackageReference Include="ReactiveUI.SourceGenerators" />--> <!-- TODO: switch to this -->
        <PackageReference Include="Serilog.Sinks.Console" />
        <PackageReference Include="Serilog.Sinks.File" />
        <PackageReference Include="Splat.DependencyInjection.SourceGenerator" PrivateAssets="all" />
        <PackageReference Include="Splat.Serilog" />

        <!-- HotAvalonia includes an older version of Xaml.Loader -->
        <PackageReference Include="Avalonia.Markup.Xaml.Loader" Condition="'$(Configuration)' == 'Debug'" PrivateAssets="all" />
        <PackageReference Include="Avalonia.Diagnostics" Condition="'$(Configuration)' == 'Debug'" />
    </ItemGroup>

    <ItemGroup Condition="'$(PublishAot)' == 'true' or '$(PublishTrimmed)' == 'true'">
        <TrimmerRootAssembly Include="$(AssemblyName)" />
        <TrimmerRootAssembly Include="ReactiveMarbles.CacheDatabase.Sqlite3" />
        <TrimmerRootAssembly Include="SQLite-net" />
    </ItemGroup>
</Project>
