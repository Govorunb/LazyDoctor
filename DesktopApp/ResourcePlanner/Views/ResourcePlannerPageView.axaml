<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             mc:Ignorable="d" d:DesignWidth="850" d:DesignHeight="450"
             xmlns:vm="using:DesktopApp.ResourcePlanner"
             xmlns:v="using:DesktopApp.ResourcePlanner.Views"
             xmlns:fa="using:FluentAvalonia.UI.Controls"
             xmlns:conv="using:DesktopApp.Utilities.Converters"
             x:Class="DesktopApp.ResourcePlanner.Views.ResourcePlannerPageView"
             x:DataType="vm:ResourcePlannerPage">
  <Design.DataContext>
    <vm:DesignResourcePlannerPage />
  </Design.DataContext>
  <Control.Styles>
    <Style Selector="Expander /template/ #ExpanderHeader TextBlock">
      <Setter Property="FontSize" Value="22" />
    </Style>
    <Style Selector="WrapPanel[Orientation=Horizontal] > :is(Control)">
      <Setter Property="Margin" Value="4 2" />
    </Style>
    <Style Selector="fa|NumberBox">
      <Setter Property="SpinButtonPlacementMode" Value="Compact" />
      <Setter Property="MinWidth" Value="120" />
    </Style>
    <Style Selector="TextBlock">
      <Setter Property="VerticalAlignment" Value="Center" />
      <Style Selector="^.Strong">
        <Setter Property="Theme" Value="{DynamicResource BodyStrongTextBlockStyle}" />
      </Style>
      <Style Selector="^.Subtitle">
        <Setter Property="Theme" Value="{DynamicResource SubtitleTextBlockStyle}" />
      </Style>
      <Style Selector="^.Title">
        <Setter Property="Theme" Value="{DynamicResource TitleTextBlockStyle}" />
      </Style>
    </Style>
    <Style Selector="Label">
      <Setter Property="VerticalAlignment" Value="Center" />
      <Style Selector="^.Title">
        <Setter Property="FontSize" Value="24" />
        <Setter Property="FontWeight" Value="SemiBold" />
      </Style>
      <Style Selector="^.Subtitle">
        <Setter Property="FontSize" Value="20" />
        <Setter Property="FontWeight" Value="SemiBold" />
      </Style>
    </Style>
  </Control.Styles>
  <ScrollViewer>
    <Border Padding="32 16">
      <StackPanel Orientation="Vertical" Spacing="4">
        <Expander Header="Setup" IsExpanded="{Binding Prefs.SetupExpanded}">
          <StackPanel Orientation="Vertical">
            <Label Classes="Title" Content="Player" />
            <StackPanel Orientation="Horizontal" Spacing="8">
              <fa:NumberBox Header="Level" Value="{Binding Setup.InitialExpData.Level, Mode=TwoWay, FallbackValue=1}"
                            Minimum="1" Maximum="{Binding GameConst.MaxPlayerLevel}" />
              <fa:NumberBox Header="Exp" Minimum="0" Maximum="{Binding Setup.InitialExpData.Level, Converter={x:Static conv:FuncConverters.PlayerLevelToExpRequirement}}"
                            Value="{Binding Setup.InitialExpData.Exp, Mode=TwoWay, FallbackValue=0}" />
              <StackPanel Orientation="Horizontal" Spacing="8" VerticalAlignment="Bottom" Margin="0 6">
                <fa:SymbolIcon ToolTip.Tip="You can find out your current EXP without spending sanity by using a practice plan"
                               FontSize="20" Symbol="59935" /> <!-- xEA1F, Info -->
              </StackPanel>
            </StackPanel>
            <StackPanel Name="TargetsSection">
              <Label Classes="Title" Content="Targets" />
              <Grid RowDefinitions="Auto,Auto" ColumnDefinitions="Auto,Auto,Auto,Auto">
                  <Label Grid.Column="0" Grid.Row="0" Content="Target Stage" Target="StagePicker" />
                  <DataValidationErrors Grid.Column="0" Grid.Row="1" Margin="0 0 8 0"
                                        Owner="{Binding #StagePicker}">
                    <AutoCompleteBox Name="StagePicker"
                                     ItemsSource="{Binding StageCodes}" Text="{Binding Setup.TargetStageCode, Mode=TwoWay}"
                                     MinWidth="100" />
                  </DataValidationErrors>

                  <Label Grid.Column="1" Grid.Row="0" Content="Target Date" VerticalAlignment="Center" />
                  <DataValidationErrors Grid.Column="1" Grid.Row="1"
                                        Owner="{Binding #TargetDatePicker}">
                    <!-- TODO: just use DatePicker (requires swapping to DateTimeOffset (which is better than manually swapping timezones anyway)) -->
                    <CalendarDatePicker Margin="0 0 8 0"
                                        Name="TargetDatePicker"
                                        SelectedDate="{Binding Setup.TargetDate, Mode=TwoWay}"
                                        DisplayDateStart="{Binding Setup.InitialDate}"
                                        DisplayDate="{Binding Setup.TargetDate, Mode=TwoWay}" />
                  </DataValidationErrors>

                  <Label Grid.Column="2" Grid.Row="0" Content="Start Date" VerticalAlignment="Center" />
                  <DataValidationErrors Grid.Column="2" Grid.Row="1"
                                        Owner="{Binding #InitialDatePicker}">
                    <CalendarDatePicker Margin="0 0 8 0"
                                        Name="InitialDatePicker"
                                        SelectedDate="{Binding Setup.InitialDate, Mode=TwoWay}" />
                  </DataValidationErrors>

                  <Button Grid.Column="3" Grid.Row="1" Command="{Binding SetInitialDateToTodayCommand}"
                          ToolTip.Tip="Set start date to the current date/time">
                    <fa:SymbolIcon Symbol="GoToToday" FontSize="20" />
                  </Button>
              </Grid>
            </StackPanel>

            <Label Classes="Title" Content="Sanity" Margin="0 24 0 0" />
            <StackPanel Orientation="Horizontal" Spacing="8">
              <Control.Styles>
                <Style Selector="fa|NumberBox">
                  <Setter Property="SpinButtonPlacementMode" Value="Compact" />
                  <Setter Property="SimpleNumberFormat" Value="0" />
                  <Setter Property="Minimum" Value="0" />
                </Style>
              </Control.Styles>
              <TextBlock Text="Banked sanity" />
              <fa:NumberBox Name="CurrentSanity" Value="{Binding Setup.CurrentSanity}"
                            Header="Current Sanity" />
              <fa:NumberBox Name="SmallPots" Value="{Binding Setup.SmallPots}"
                            Header="Small Potions (+10)" />
              <fa:NumberBox Name="MediumPots" Value="{Binding Setup.MediumPots}"
                            Header="Medium Potions (+80)" />
              <fa:NumberBox Name="LargePots" Value="{Binding Setup.LargePots}"
                            Header="Large Potions (+120)" />
              <fa:NumberBox Name="OpBudget" Value="{Binding Setup.OpBudget}"
                            Header="Originium Prime (+135)" />
              <fa:NumberBox Name="ExtraSanityValue" Value="{Binding Setup.ExtraSanity}"
                            Header="Extra Sanity Value" ToolTip.Tip="Misc sanity items like cakes" />
            </StackPanel>
            <TextBlock Text="" />
            <StackPanel Orientation="Horizontal" Spacing="8">
              <TextBlock Text="Gain/Loss" Classes="Strong" VerticalAlignment="Center" />
              <StackPanel Orientation="Vertical">
                <CheckBox Name="MonthlyCardCheckBox"
                          Content="Monthly Card" ToolTip.Tip="Add a medium potion (+80) every day"
                          IsChecked="{Binding Setup.UseMonthlyCard}" />
                <CheckBox Name="WeeklyPotsCheckBox"
                          Content="Use Weekly Potions" ToolTip.Tip="2 large potions (+120 each); obtained on Monday for simplicity (tip: you can complete weekly missions with zero-cost stages like OF-1)"
                          IsChecked="{Binding Setup.UseWeeklyPots}" />
              </StackPanel>
              <fa:NumberBox Name="RegenEfficiencyAkaLazyLoss" Header="Daily Regen Efficiency"
                            Minimum="0" Maximum="999"
                            Value="{Binding Setup.DailySanityRegenEfficiency}"
                            ToolTip.Tip="How much of the daily 240 regen you usually end up spending (on average).
For example, if you log in once a day and your cap is 180, put in 180." />
              <StackPanel Spacing="2" ToolTip.Tip="Determines your sanity efficiency in doing the weekly Annihilation.&#10;The current rotating map is always the most efficient at 124 san/week.">
                <Label Content="Annihilation Map" Target="AnniMap" />
                <ComboBox Name="AnniMap" Classes="EnumPicker"
                          ItemsSource="{x:Static vm:ResourcePlannerSettings.AnnihilationMaps}"
                          SelectedValue="{Binding Setup.AnnihilationMap}"/>
              </StackPanel>
            </StackPanel>
          </StackPanel>
        </Expander>

        <StackPanel Orientation="Horizontal" Spacing="8" Margin="8">
          <Button Classes="accent" Margin="4"
                  IsEnabled="{Binding ValidationContext.IsValid}"
                  Content="Calculate" Command="{Binding CalculateCommand}" />
          <TextBlock Foreground="Red" Text="{Binding Errors}" IsVisible="{Binding !!Errors.Length}" />
        </StackPanel>

        <Border Padding="8">
          <StackPanel>
            <TextBlock FontSize="22" IsVisible="{Binding !!Results.Count}">
              Total target stage runs: <Run Text="{Binding TotalTargetStageRuns}" />
            </TextBlock>
            <StackPanel IsVisible="{Binding !!TotalTargetStageRuns}" Orientation="Horizontal" Spacing="8">
              <TextBlock Text="If the target stage drops (on average)" />
              <fa:NumberBox Value="{Binding TargetDropAmtPerRun, Mode=TwoWay}"
                            Minimum="0" SmallChange="0.5" LargeChange="10"
                            ToolTip.Tip="Use fractional values to represent percentages&#10;(e.g. a specific class chip would be 0.5 for a 50% rate)" />
              <TextBlock Text="of your desired item, you will end up with" />
              <TextBlock Text="{Binding TotalTargetDropAmt, FallbackValue='N/A', StringFormat=F00}" FontSize="18"
                         ToolTip.Tip="Actual amount may vary based on your luck. Increasing the total run count will smooth out statistical variances." />
              <TextBlock Text="of your desired drop." />
            </StackPanel>
          </StackPanel>
        </Border>
        <Expander Header="Details" IsExpanded="{Binding Prefs.ResultsExpanded}" IsVisible="{Binding !!Results.Count}">
          <Grid ColumnDefinitions="Auto, *">
            <!-- switch for timezone? (server/local)
            does look a bit weird to have monday stuff listed on tuesday -->
            <Calendar Name="Calendar"
                      Grid.Column="0"
                      VerticalAlignment="Top"
                      DisplayDateStart="{Binding StartDate, Mode=OneWay}"
                      DisplayDateEnd="{Binding EndDate, Mode=OneWay}"
                      SelectedDate="{Binding SelectedDate, Mode=TwoWay}" />
              <v:PlannerDayView DataContext="{Binding SelectedDay}"
                                Grid.Column="1"
                                IsVisible="{Binding !!DateRangeString.Length, TargetNullValue=false}"
                                Margin="8 0"
                                HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                />
          </Grid>
        </Expander>
      </StackPanel>
    </Border>
  </ScrollViewer>
</UserControl>
